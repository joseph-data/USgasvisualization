name: Deploy Shiny App to shinyapps.io

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      
    - name: Setup R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: '4.3.0'
        
    - name: Setup R dependencies
      uses: r-lib/actions/setup-r-dependencies@v2
      with:
        cache-version: 1
        extra-packages: |
          any::rsconnect
          any::renv
          
    - name: Restore R packages
      run: |
        if (file.exists("renv.lock")) {
          renv::restore()
        } else {
          install.packages(c("shiny", "tidyverse", "lubridate", "scales", "viridis", "patchwork", "plotly"))
        }
      shell: Rscript {0}
      
    - name: Test app locally
      run: |
        # Test that the app can be loaded without errors
        R -e "source('app.R')"
      
    - name: Deploy to shinyapps.io
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      run: |
        # Configure shinyapps.io account
        rsconnect::setAccountInfo(
          name = Sys.getenv("SHINYAPPS_NAME"),
          token = Sys.getenv("SHINYAPPS_TOKEN"), 
          secret = Sys.getenv("SHINYAPPS_SECRET")
        )
        
        # Deploy the app
        rsconnect::deployApp(
          appDir = ".",
          appFiles = c("app.R", "renv.lock"),
          appName = "usgasvisualization",
          appTitle = "US Gas Prices Visualization",
          forceUpdate = TRUE
        )
      shell: Rscript {0}
      env:
        SHINYAPPS_NAME: ${{ secrets.SHINYAPPS_NAME }}
        SHINYAPPS_TOKEN: ${{ secrets.SHINYAPPS_TOKEN }}
        SHINYAPPS_SECRET: ${{ secrets.SHINYAPPS_SECRET }}